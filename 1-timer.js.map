{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerInterval = null;\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      startBtn.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\nflatpickr('#datetime-picker', options);\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  dataDays.textContent = addLeadingZero(days);\n  dataHours.textContent = addLeadingZero(hours);\n  dataMinutes.textContent = addLeadingZero(minutes);\n  dataSeconds.textContent = addLeadingZero(seconds);\n}\n\nfunction startTimer() {\n  startBtn.disabled = true;\n  dateTimePicker.disabled = true;\n\n  timerInterval = setInterval(() => {\n    const now = new Date().getTime();\n    const timeLeft = userSelectedDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(timerInterval);\n      convertMs(0);\n      iziToast.success({\n        title: \"Time's up!\",\n        message: 'The time is over. Would you like to start over?',\n        position: 'topRight',\n      });\n      dateTimePicker.disabled = false;\n      return;\n    }\n    convertMs(timeLeft);\n  }, 1000);\n}\n\nstartBtn.addEventListener('click', startTimer);\n"],"names":["dateTimePicker","startBtn","dataDays","dataHours","dataMinutes","dataSeconds","userSelectedDate","timerInterval","options","selectedDates","iziToast","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","startTimer","now","timeLeft"],"mappings":"sGAMA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAmB,KACnBC,EAAgB,KACpBN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,GAAoB,IAAI,MAC1BL,EAAS,SAAW,GACpBS,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,GAEDT,EAAS,SAAW,EAEvB,CACH,EACAU,EAAU,mBAAoBH,CAAO,EACrC,SAASI,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,CACzC,CACA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElEb,EAAS,YAAcU,EAAeI,CAAI,EAC1Cb,EAAU,YAAcS,EAAeK,CAAK,EAC5Cb,EAAY,YAAcQ,EAAeM,CAAO,EAChDb,EAAY,YAAcO,EAAeO,CAAO,CAClD,CAEA,SAASC,GAAa,CACpBnB,EAAS,SAAW,GACpBD,EAAe,SAAW,GAE1BO,EAAgB,YAAY,IAAM,CAChC,MAAMc,EAAM,IAAI,KAAM,EAAC,QAAS,EAC1BC,EAAWhB,EAAmBe,EAEpC,GAAIC,GAAY,EAAG,CACjB,cAAcf,CAAa,EAC3BO,EAAU,CAAC,EACXJ,EAAS,QAAQ,CACf,MAAO,aACP,QAAS,kDACT,SAAU,UAClB,CAAO,EACDV,EAAe,SAAW,GAC1B,MACN,CACIc,EAAUQ,CAAQ,CACnB,EAAE,GAAI,CACT,CAEArB,EAAS,iBAAiB,QAASmB,CAAU"}